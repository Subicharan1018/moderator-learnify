# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g5VFQQFrEZLexOQrRAFWono6lU06niwX
"""

import kagglehub

# Download latest version
path = kagglehub.dataset_download("elikplim/concrete-compressive-strength-data-set")

print("Path to dataset files:", path)

ls /root/.cache/kagglehub/datasets/elikplim/concrete-compressive-strength-data-set/versions/1

import pandas as pd
df = pd.read_csv("/root/.cache/kagglehub/datasets/elikplim/concrete-compressive-strength-data-set/versions/1/concrete_data.csv")

df.head()

df.info()

X = df.drop(["concrete_compressive_strength"], axis=1)
y = df["concrete_compressive_strength"]

from sklearn.preprocessing import StandardScaler

sc = StandardScaler()
X_scaled = sc.fit_transform(X)

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2)

from xgboost import XGBRegressor
from sklearn.metrics import r2_score

xgb = XGBRegressor()
xgb.fit(X_train, y_train)
y_pred = xgb.predict(X_test)
r2_score(y_test, y_pred)

import matplotlib.pyplot as plt
plt.figure()
plt.scatter(y_test, y_pred)
plt.scatter(y_test, y_test)
plt.plot(y_test, y_test)
plt.legend(["Predicted", "Original", "Regression Line"])
plt.show()

from sklearn.ensemble import RandomForestRegressor
rf = RandomForestRegressor()
rf.fit(X_train,y_train)

rf_predict = rf.predict(X_test)

rf_score = r2_score(y_test,rf_predict)
print("Accuracy Score for Random Forest Regressor:",rf_score*100)

import matplotlib.pyplot as plt
plt.figure()
plt.scatter(y_test, y_pred)
plt.scatter(y_test, y_test)
plt.plot(y_test, y_test)
plt.legend(["Predicted", "Original", "Regression Line"])
plt.show()

import numpy as np
new_sample = np.array([[540.0, 0.0, 0.0, 162.0, 2.5, 1040.0, 676.0, 28]])

# Predict compressive strength
predicted_strength = rf.predict(new_sample)  # rf_model is your trained RandomForestRegressor

print("Predicted Concrete Compressive Strength:", predicted_strength[0])

new_concrete= np.array([[350.0, 100.0, 0.0, 250.0, 5.0, 950.0, 800.0, 800]])
new_concrete_mix = np.array([[350.0, 100000.0, 0.0, 250.0, 5.0, 950.0, 800.0, 7000]])
predicted_strength = rf.predict(new_concrete)

# 6. Print the result
print(f"Predicted Compressive Strength: {predicted_strength[0]:.2f} MPa")

